{"version":3,"sources":["components/NavBar.js","components/CardMovie.js","components/MovieList.js","components/Movie.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","CardMovie","movie","index","image","title","id","src","alt","MovieList","props","nextMovie","movies","newIndex","state","movieOne","console","log","setState","prevtMovie","prevIndex","show","axios","get","then","res","data","catch","err","this","onClick","disabled","style","left","transform","length","map","key","right","Component","Movie","showVideo","playing","hideVideo","match","params","movie_id","poster","type","summary","handleClose","playVidep","playVideo","url","video","ModalVideo","children","showHideClassName","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6597aab0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../styles/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"nav-wrapper white dark-text\">\r\n      <Link to=\"/\" className=\"brand-logo pixar-logo\"/>\r\n      <Link to=\"/\" className=\" margin-button btn-small blue-grey darken-4\">\r\n        Home\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst CardMovie = ({ movie }) => {\r\n  const { index, image, title } = movie;\r\n  return (\r\n    <div id={`card-${index}`} className=\"card\">\r\n      <img src={image} alt={image} />\r\n      <div className=\"details\">\r\n        {title}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardMovie;\r\n","import React, { Component } from \"react\";\r\nimport \"./../styles/movie-list.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardMovie from \"./CardMovie\";\r\n\r\nexport default class MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movies: [],\r\n      show: false,\r\n      movieOne: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://5dd02a32d5f1a500149a8463.mockapi.io/movies/movies/\")\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const movies = res.data;\r\n        this.setState({\r\n          movies,\r\n          show: true,\r\n          movieOne: movies[0]\r\n        });\r\n        console.log(this.state.movieOne);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  nextMovie = movies => {\r\n    const newIndex = this.state.movieOne.index + 1;\r\n    console.log(\"newIndex prev\", newIndex);\r\n    this.setState({\r\n      movieOne: movies[newIndex]\r\n    });\r\n  };\r\n\r\n  prevtMovie = movies => {\r\n    const prevIndex = this.state.movieOne.index - 1;\r\n    console.log(\"prevIndex prev\", prevIndex);\r\n    this.setState({\r\n      movieOne: movies[prevIndex]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movies, movieOne, show } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <button\r\n            onClick={() => this.prevtMovie(movies)}\r\n            disabled={movieOne.index === 0}\r\n            className=\"buttons-carousel flex-center position-btn\"\r\n            style={{ left: 20 }}\r\n          >\r\n            <i className=\"material-icons\">chevron_left</i>\r\n          </button>\r\n          {show ? (\r\n            <div className=\"cards-slider\">\r\n              <div\r\n                className=\"cards-slider-wrapper\"\r\n                style={{\r\n                  transform: `translateX(-${movieOne.index *\r\n                    (100 / movies.length)}%)`\r\n                }}\r\n              >\r\n                {movies.map(movie => (\r\n                  <Link key={movie.id} to={\"/\" + movie.id}>\r\n                    <CardMovie key={movie.id} movie={movie} />\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"cont-load-page\">\r\n              <span className=\"center loading-page\" />\r\n              <h1 className=\"\">Loading...</h1>\r\n            </div>\r\n          )}\r\n          <button\r\n            onClick={() => this.nextMovie(movies)}\r\n            disabled={ movieOne.index === 4}\r\n            id=\"buttons-carousel\"\r\n            className=\"buttons-carousel flex-center position-btn\"\r\n            style={{ right: 20 }}\r\n          >\r\n            <i className=\"material-icons\">chevron_right</i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./../styles/modal-video.css\";\r\nimport \"./../styles/movie.css\";\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default class Movie extends Component {\r\n  state = {\r\n    movie: \"\",\r\n    showVideo: false,\r\n    playing: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    let id = this.props.match.params.movie_id;\r\n    console.log(\"id\", id);\r\n    axios\r\n      .get(\"https://5dd02a32d5f1a500149a8463.mockapi.io/movies/movies/\" + id)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const movie = res.data;\r\n        this.setState({ movie: movie });\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  showVideo = () => {\r\n    this.setState({ showVideo: true, playing: true });\r\n  };\r\n\r\n  hideVideo = () => {\r\n    this.setState({ showVideo: false, playing: false });\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { movie, showVideo } = this.state;\r\n    console.log(this.state.movie);\r\n    return (\r\n      <div className=\"container margin-top\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6 l6\">\r\n            <img\r\n              className=\"image-poster\"\r\n              src={movie.poster}\r\n              alt={movie.title}\r\n            />\r\n          </div>\r\n          <div className=\"col s12 m6 l6\">\r\n            <h4>{movie.title}</h4>\r\n            <div className=\"card-content\">\r\n              <h6>Type : {movie.type}</h6>\r\n              <p>Summary:</p>\r\n              <p>{movie.summary}</p>\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.showVideo}\r\n                className=\"btn-small blue-grey\"\r\n              >\r\n                Show Video\r\n              </button>\r\n              <ModalVideo\r\n                showVideo={showVideo}\r\n                handleClose={this.hideVideo}\r\n                playVidep={this.playVideo}\r\n              >\r\n                <ReactPlayer url={movie.video} playing={this.state.playing} />\r\n              </ModalVideo>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ModalVideo = ({ handleClose, showVideo, children }) => {\r\n  const showHideClassName = showVideo\r\n    ? \"modal display-block\"\r\n    : \"modal display-none\";\r\n\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        <button onClick={handleClose} className=\"buttons-close\">\r\n          <i className=\"material-icons\">close</i>\r\n        </button>\r\n        {children}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React , {Component} from 'react';\nimport {BrowserRouter, Switch,Route } from 'react-router-dom';\nimport Navbar from './components/NavBar'\nimport MovieList from './components/MovieList';\nimport Movie from './components/Movie';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <section>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={MovieList} />\n            <Route path=\"/:movie_id\" component={Movie} />\n          </Switch>\n        </section>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}